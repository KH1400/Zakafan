"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Header } from "@/components/fourfold/header";
import { InteractiveBanners } from "@/components/fourfold/interactive-banners";

type Language = 'fa' | 'en' | 'ar' | 'he';

const languageOptions: Record<Language, { name: string; flag: string; dir: 'rtl' | 'ltr'; font: string }> = {
  fa: { name: 'فارسی', flag: '🇮🇷', dir: 'rtl', font: 'font-persian' },
  en: { name: 'English', flag: '🇬🇧', dir: 'ltr', font: 'font-body' },
  ar: { name: 'العربية', flag: '🇸🇦', dir: 'rtl', font: 'font-arabic' },
  he: { name: 'עברית', flag: '🇮🇱', dir: 'rtl', font: 'font-hebrew' },
};

const descriptions = {
    fa: "داینوگرافی، یک قالب محتوایی خلاقانه و جدید است که شما را در مسیر کسب اطلاعات معتبر و جامع به شکلی یکپارچه و هوشمند یاری می‌کند. این محتوا تماما توسط الگوریتم‌های هوشمند و نظارت کارشناسان و متخصصان تولید می‌گردد و به تناوب بروزرسانی می‌گردد.",
    en: "Dinography is an innovative content template that assists you in acquiring reliable, comprehensive information seamlessly and intelligently. This content is entirely generated by algorithms under expert supervision and is periodically updated.",
    ar: "داينوغرافي هو قالب محتوى مبتكر يساعدك في الحصول على معلومات موثوقة وشاملة بذكاء. يتم إنتاج هذا المحتوى بالكامل بواسطة خوارزميات ذكية تحت إشراف خبراء ويتم تحديثه بشكل دوري.",
    he: "דינוגרפיה היא תבנית תוכן חדשנית המסייעת לך ברכישת מידע אמין ומקיף באופן משולב וחכם. תוכן זה מופק על ידי אלגוריתמים בפיקוח מומחים ומתעדכן מעת לעת."
};

export default function Home() {
  const [language, setLanguage] = useState<Language | null>(null);

  if (!language) {
    return (
      <main className="flex flex-col items-center justify-center min-h-screen bg-background text-foreground p-6">
        <div className="mb-12">
           <svg
              viewBox="0 0 250 60"
              className="h-24 w-auto"
              xmlns="http://www.w3.org/2000/svg"
            >
              <text
                x="0"
                y="30"
                fontSize="32"
                fontWeight="bold"
                fill="hsl(var(--primary))"
                className="font-headline"
              >
                Zakafan
              </text>
              <text
                x="0"
                y="50"
                fontSize="14"
                fontWeight="bold"
                fill="hsl(var(--foreground))"
                opacity="0.8"
                className="font-persian"
              >
                مرجع داینوگرافی
              </text>
              <g transform="translate(190, 0)">
                <rect width="60" height="60" rx="12" fill="hsl(var(--accent))" />
                <g
                  stroke="hsl(var(--primary))"
                  strokeWidth="2.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  fill="none"
                >
                  <path d="M42,21 C42,26.5228475 37.5228475,31 32,31 L28,31 C22.4771525,31 18,26.5228475 18,21 C18,15.4771525 22.4771525,11 28,11 C33.5228475,11 37.8,15.4771525 37.8,21" />
                  <path d="M28,31 L28,38 C28,39.1045695 27.1045695,40 26,40 L22,40" />
                  <path d="M32,17 L38,17" />
                  <circle cx="40" cy="17" r="2.5" />
                  <path d="M35,24 L42,24" />
                  <circle cx="44" cy="24" r="2.5" />
                  <path d="M32,31 L36,31" />
                  <circle cx="38" cy="31" r="2.5" />
                  <path d="M28,11 L28,15" />
                  <circle cx="28" cy="17" r="2.5" />
                </g>
              </g>
            </svg>
        </div>
        <div className="flex flex-wrap justify-center gap-4">
          {(Object.keys(languageOptions) as Language[]).map((key) => (
            <Button
              key={key}
              variant="outline"
              className="p-8 text-2xl h-auto"
              onClick={() => setLanguage(key)}
            >
              <span className="text-4xl me-4">{languageOptions[key].flag}</span>
              <span className={languageOptions[key].font}>{languageOptions[key].name}</span>
            </Button>
          ))}
        </div>
        <div className="text-center mt-12 max-w-3xl space-y-3">
            <p className="text-sm text-muted-foreground font-persian" dir="rtl">{descriptions.fa}</p>
            <p className="text-sm text-muted-foreground font-body">{descriptions.en}</p>
            <p className="text-sm text-muted-foreground font-arabic" dir="rtl">{descriptions.ar}</p>
            <p className="text-sm text-muted-foreground font-hebrew" dir="rtl">{descriptions.he}</p>
        </div>
      </main>
    );
  }

  const selectedLang = languageOptions[language];

  return (
    <div
      dir={selectedLang.dir}
      className={`${selectedLang.font} flex flex-col h-screen w-screen bg-background`}
    >
      <Header onLanguageChangeClick={() => setLanguage(null)} />
      <main className="flex-grow overflow-hidden">
        <InteractiveBanners lang={language} />
      </main>
    </div>
  );
}
